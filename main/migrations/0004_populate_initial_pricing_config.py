# Generated by Django 5.2.6 on 2025-09-08 11:42

from django.db import migrations


def create_initial_pricing_config(apps, schema_editor):
    """Create initial pricing configuration with current hardcoded values"""
    PricingConfiguration = apps.get_model('main', 'PricingConfiguration')
    Layer1Configuration = apps.get_model('main', 'Layer1Configuration')
    Layer2Condition = apps.get_model('main', 'Layer2Condition')
    ConditionOption = apps.get_model('main', 'ConditionOption')
    
    # Create main configuration
    config = PricingConfiguration.objects.create(
        version=1,
        name="Default Configuration",
        description="Initial configuration migrated from hardcoded values",
        is_draft=False,
        is_active=True,
        layer1_max_reduction=15.0,
        layer2_max_reduction=70.0,
        total_max_reduction=85.0
    )
    
    # Create Layer 1 configuration (mileage-based)
    Layer1Configuration.objects.create(
        config=config,
        mileage_threshold_percent=10.0,  # Every 10% excess mileage
        reduction_per_threshold=2.0      # 2% reduction
    )
    
    # Create Layer 2 conditions (condition assessment)
    conditions_data = [
        {
            'name': 'Exterior Condition',
            'field_name': 'exterior_condition',
            'icon_class': 'fas fa-car',
            'order': 1,
            'options': [
                ('Excellent', 0),
                ('Good', 3),
                ('Fair', 6),
                ('Poor', 10)
            ]
        },
        {
            'name': 'Interior Condition',
            'field_name': 'interior_condition',
            'icon_class': 'fas fa-couch',
            'order': 2,
            'options': [
                ('Excellent', 0),
                ('Good', 3),
                ('Fair', 6),
                ('Poor', 10)
            ]
        },
        {
            'name': 'Mechanical Condition',
            'field_name': 'mechanical_condition',
            'icon_class': 'fas fa-cogs',
            'order': 3,
            'options': [
                ('Excellent', 0),
                ('Good', 7),
                ('Fair', 13),
                ('Poor', 20)
            ]
        },
        {
            'name': 'Accident History',
            'field_name': 'accident_history',
            'icon_class': 'fas fa-exclamation-triangle',
            'order': 4,
            'options': [
                ('None', 0),
                ('Minor', 8),
                ('Major', 15)
            ]
        },
        {
            'name': 'Service History',
            'field_name': 'service_history',
            'icon_class': 'fas fa-wrench',
            'order': 5,
            'options': [
                ('Full', 0),
                ('Partial', 3),
                ('None', 5)
            ]
        },
        {
            'name': 'Number of Owners',
            'field_name': 'number_of_owners',
            'icon_class': 'fas fa-users',
            'order': 6,
            'options': [
                ('1 Owner', 0),
                ('2 Owners', 2),
                ('3+ Owners', 5)
            ]
        },
        {
            'name': 'Tires & Brakes',
            'field_name': 'tires_brakes',
            'icon_class': 'fas fa-circle',
            'order': 7,
            'options': [
                ('New', 0),
                ('Fair', 2.5),
                ('Needs Replacement', 5)
            ]
        },
        {
            'name': 'Modifications',
            'field_name': 'modifications',
            'icon_class': 'fas fa-tools',
            'order': 8,
            'options': [
                ('None', 0),
                ('Minor', 2.5),
                ('Major', 5)
            ]
        },
        {
            'name': 'Market Demand',
            'field_name': 'market_demand',
            'icon_class': 'fas fa-chart-line',
            'order': 9,
            'options': [
                ('High', 0),
                ('Average', 5),
                ('Low', 10)
            ]
        },
        {
            'name': 'Brand Category',
            'field_name': 'brand_category',
            'icon_class': 'fas fa-flag',
            'order': 10,
            'options': [
                ('Japanese Car', 0),
                ('Local Car', 8),
                ('Continental', 10),
                ('Super Car', 30)
            ]
        },
        {
            'name': 'Price Tier',
            'field_name': 'price_tier',
            'icon_class': 'fas fa-dollar-sign',
            'order': 11,
            'options': [
                ('>RM50k', 0),
                ('RM20k-50k', 6),
                ('<RM20k', 12)
            ]
        }
    ]
    
    # Create conditions and their options
    for condition_data in conditions_data:
        condition = Layer2Condition.objects.create(
            config=config,
            name=condition_data['name'],
            field_name=condition_data['field_name'],
            icon_class=condition_data['icon_class'],
            order=condition_data['order']
        )
        
        # Create options for this condition
        for i, (label, percentage) in enumerate(condition_data['options']):
            ConditionOption.objects.create(
                condition=condition,
                label=label,
                percentage=percentage,
                order=i
            )


def reverse_initial_pricing_config(apps, schema_editor):
    """Remove initial pricing configuration"""
    PricingConfiguration = apps.get_model('main', 'PricingConfiguration')
    PricingConfiguration.objects.filter(version=1).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0003_pricingconfiguration_layer2condition_and_more'),
    ]

    operations = [
        migrations.RunPython(create_initial_pricing_config, reverse_initial_pricing_config),
    ]
